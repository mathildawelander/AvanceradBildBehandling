function processed_image = CropImages(input_image, left_eye_pos, right_eye_pos)
    % Parameters
    desired_left_eye_pos = [85, 125];
    desired_right_eye_pos = [200, 125];
    desired_distance_between_eyes = norm(desired_right_eye_pos - desired_left_eye_pos);
    desired_size = [350, 300]; % Height x Width

    % Calculate the rotation angle
    delta_y = right_eye_pos(2) - left_eye_pos(2);
    delta_x = right_eye_pos(1) - left_eye_pos(1);
    angle = atan2(delta_y, delta_x);

    % Rotate the image
    rotated_image = imrotate(input_image, -rad2deg(angle), 'bicubic');
    imshow(rotated_image, [1,2])
    
    % Calculate new eye positions after rotation
    % Assuming the image is rotated about its center
    image_center = (size(rotated_image, [1,2])/ 2);
    rotation_matrix = [cos(angle), -sin(angle); sin(angle), cos(angle)];
    new_left_eye_pos = image_center + (rotation_matrix.*(left_eye_pos - image_center)')';
    new_right_eye_pos = image_center + (rotation_matrix.*(right_eye_pos - image_center)')';

    % Calculate scaling factor
    current_distance_between_eyes = norm(new_right_eye_pos - new_left_eye_pos);
    scaling_factor = desired_distance_between_eyes / current_distance_between_eyes;

    % Resize the image
    scaled_image = imresize(rotated_image, scaling_factor);

    % Calculate new eye positions after scaling
    scaled_left_eye_pos = new_left_eye_pos * scaling_factor;
    scaled_right_eye_pos = new_right_eye_pos * scaling_factor;

    % Calculate the top-left corner for cropping
    crop_x = scaled_left_eye_pos(1) - desired_left_eye_pos(1);
    crop_y = scaled_left_eye_pos(2) - desired_left_eye_pos(2);
    crop_rectangle = [crop_x, crop_y, desired_size(2), desired_size(1)];

    % Crop the image
    processed_image = imcrop(scaled_image, crop_rectangle);
end